plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'rhirabay'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

ext {
	set('jakarta.servlet.version', "5.0")
	set('springCloudVersion', "2022.0.1")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

repositories {
	mavenCentral()
	mavenLocal()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	// https://mvnrepository.com/artifact/javax.persistence/javax.persistence-api
	implementation 'javax.persistence:javax.persistence-api:2.2'
	// https://mvnrepository.com/artifact/javax.validation/validation-api
	implementation 'javax.validation:validation-api:2.0.1.Final'

	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	// https://mvnrepository.com/artifact/io.micrometer/micrometer-registry-prometheus
	implementation 'io.micrometer:micrometer-registry-prometheus'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.0'
	runtimeOnly 'com.h2database:h2'

//	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-jetty
//	implementation 'org.springframework.boot:spring-boot-starter-jetty'

//	implementation 'rhirabay.springboot3.sample:library:1.0.0'

	// for customization RestTemplate
	// https://mvnrepository.com/artifact/org.apache.httpcomponents.client5/httpclient5
	implementation 'org.apache.httpcomponents.client5:httpclient5'

	implementation 'io.micrometer:micrometer-tracing'
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'

//	implementation 'javax.servlet:javax.servlet-api:4.0.1'
}

tasks.named('test') {
	useJUnitPlatform()
}


